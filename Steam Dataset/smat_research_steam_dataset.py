# -*- coding: utf-8 -*-
"""SMAT_Research-Steam_Dataset.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zWj16PekxEjcoWu8h8uzTUrYTONywiiZ

# **Read Data**
"""

import pandas as pd
import seaborn as sns
import numpy as np
import matplotlib.pyplot as plt

steam = pd.read_csv('Data Steam.csv')
steam.head() #read top 5 data

steam.to_excel('steam.xlsx')

"""# **Checking Data dan Data Cleaning Process**"""

steam.isnull()

steam.isnull().sum()

"""# **Genre and Score Data Grouping**"""

group_gs = pd.DataFrame(steam, columns=["genres","score"])
grouped_gs = group_gs.groupby(["genres"])
sort_gs = grouped_gs.mean()
sort_gs.sort_values('score', ascending=False)

group_gs = pd.DataFrame(steam, columns=["genres","score"])
grouped_gs = group_gs.groupby(["genres"])
sort_gs = grouped_gs.count()
sort_gs.sort_values('score', ascending=False)

sort_gs = sort_gs.sort_values('score', ascending=False)
sort_gs.head(5)

sort_gs.to_excel('gs.xlsx')

"""# **Publisher and Score Data Grouping**"""

group_ps = pd.DataFrame(steam, columns=["publisher","score"])
grouped_ps = group_ps.groupby(["publisher"])
sort_ps = grouped_ps.mean()
sort_ps.sort_values('score', ascending=False)

group_ps = pd.DataFrame(steam, columns=["publisher","score"])
grouped_ps = group_ps.groupby(["publisher"])
sort_ps = grouped_ps.count()
sort_ps.sort_values('score', ascending=False)

sort_ps = sort_ps.sort_values('score', ascending=False)
sort_ps.head(5)

sort_ps.to_excel('ps.xlsx')

"""# **Price and Score Data Grouping**"""

group_prs = pd.DataFrame(steam, columns=["price","score"])
bins = pd.IntervalIndex.from_tuples([(0,0.001), (0.001, np.max(group_prs["price"]) + 1)], closed='left')
key = list('AB')
group_prs['new'] = np.array(key)[pd.cut(group_prs["price"], bins = bins).cat.codes]
print (group_prs)

new_group_prs = pd.DataFrame(group_prs, columns=["new","score"])
new_group_prs["new"] = new_group_prs["new"].replace(['A'],'FREE')
new_group_prs["new"] = new_group_prs["new"].replace(['B'],'PAID')

new_group_prs = new_group_prs.groupby(["new"])
sort_prs = new_group_prs.mean()
sort_prs.sort_values('score', ascending=False)

sort_prs.to_excel('prs_score.xlsx')

sort_prs = new_group_prs.count()
sort_prs.sort_values('score', ascending=False)

sort_prs.plot(kind="bar", fontsize=10, colormap='viridis', figsize=(10, 5))

sort_prs.plot.pie(y='score', autopct='%.1f%%', figsize=(5, 5))

sort_prs.to_excel('prs_count.xlsx')

"""# **Genre & CCU**"""

sort_gc = pd.DataFrame(steam, columns=["short_description","genres","ccu"])
sort_gc

sort_gc = sort_gc.groupby(['genres']).sum()
sort_gc

sort_gc = sort_gc.sort_values(by=['ccu'], ascending=False)
sort_gc = sort_gc.head(10)
sort_gc

sort_gc.plot(kind="barh", fontsize=10, colormap='viridis', figsize=(10, 5))
plt.xlim(30000, 5000000)

top10gen.to_excel('top10gen.xlsx')

"""# **Publisher & CCU**"""

data3 = pd.DataFrame(steam, columns=["short_description","publisher","ccu"])
data3

userpub = data3.groupby(['publisher']).sum()
userpub

rankpub = userpub.sort_values(by=['ccu'], ascending=False)
top10pub = rankpub.head(10)
top10pub

top10pub.plot(kind="barh", fontsize=10, colormap='viridis', figsize=(10, 5))
plt.xlim(30000, 5000000)

top10pub.to_excel('top10pub.xlsx')